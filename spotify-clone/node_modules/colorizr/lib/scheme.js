"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./modules/utils");
const parse_css_1 = require("./parse-css");
const rotate_1 = require("./rotate");
/**
 * Get the scheme for a color.
 */
function scheme(input, type = 'complementary') {
    (0, utils_1.invariant)((0, utils_1.isString)(input), utils_1.messages.inputString);
    const hex = (0, parse_css_1.default)(input);
    const output = [];
    switch (type) {
        case 'analogous': {
            output.push((0, rotate_1.default)(hex, -30), hex, (0, rotate_1.default)(hex, 30));
            break;
        }
        case 'complementary': {
            output.push(hex, (0, rotate_1.default)(hex, 180));
            break;
        }
        case 'split':
        case 'split-complementary': {
            output.push(hex, (0, rotate_1.default)(hex, 150), (0, rotate_1.default)(hex, 210));
            break;
        }
        case 'triadic': {
            output.push(hex, (0, rotate_1.default)(hex, 120), (0, rotate_1.default)(hex, 240));
            break;
        }
        case 'tetradic':
        case 'rectangle': {
            output.push(hex, (0, rotate_1.default)(hex, 60), (0, rotate_1.default)(hex, 180), (0, rotate_1.default)(hex, 240));
            break;
        }
        case 'square': {
            output.push(hex, (0, rotate_1.default)(hex, 90), (0, rotate_1.default)(hex, 180), (0, rotate_1.default)(hex, 270));
            break;
        }
        default: {
            throw new TypeError('invalid type');
        }
    }
    return output;
}
exports.default = scheme;
//# sourceMappingURL=scheme.js.map