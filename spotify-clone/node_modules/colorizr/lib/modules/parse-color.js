"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
const hex2hsl_1 = require("../hex2hsl");
const hex2rgb_1 = require("../hex2rgb");
const hsl2hex_1 = require("../hsl2hex");
const hsl2rgb_1 = require("../hsl2rgb");
const is_valid_hex_1 = require("../is-valid-hex");
const parse_css_1 = require("../parse-css");
const rgb2hex_1 = require("../rgb2hex");
const rgb2hsl_1 = require("../rgb2hsl");
function parseColor(color) {
    (0, utils_1.invariant)(!!color, utils_1.messages.input);
    const output = {};
    if ((0, utils_1.isString)(color)) {
        const hex = (0, parse_css_1.default)(color);
        (0, utils_1.invariant)((0, is_valid_hex_1.default)(hex), 'input is not valid');
        output.hex = hex;
        output.rgb = (0, hex2rgb_1.default)(hex);
        output.hsl = (0, hex2hsl_1.default)(hex);
    }
    else if (Array.isArray(color)) {
        output.rgb = {
            r: (0, utils_1.limit)(color[0], 'r'),
            g: (0, utils_1.limit)(color[1], 'g'),
            b: (0, utils_1.limit)(color[2], 'b'),
        };
        output.hex = (0, rgb2hex_1.default)(output.rgb);
        output.hsl = (0, rgb2hsl_1.default)(output.rgb);
    }
    else if ((0, utils_1.isPlainObject)(color)) {
        if ((0, utils_1.isHSL)(color)) {
            output.hsl = {
                h: (0, utils_1.limit)(color.h, 'h'),
                s: (0, utils_1.limit)(color.s, 's'),
                l: (0, utils_1.limit)(color.l, 'l'),
            };
            output.rgb = (0, hsl2rgb_1.default)(output.hsl);
        }
        else if ((0, utils_1.isRGB)(color)) {
            output.rgb = {
                r: (0, utils_1.limit)(color.r, 'r'),
                g: (0, utils_1.limit)(color.g, 'g'),
                b: (0, utils_1.limit)(color.b, 'b'),
            };
            output.hsl = (0, rgb2hsl_1.default)(output.rgb);
        }
        else {
            throw new Error('invalid color');
        }
        output.hex = (0, hsl2hex_1.default)(output.hsl);
    }
    else {
        throw new Error(utils_1.messages.input);
    }
    return output;
}
exports.default = parseColor;
//# sourceMappingURL=parse-color.js.map