import { Analysis, HSL, Options, RGB, RGBArray } from './types';
declare class Colorizr {
    hex: string;
    private readonly model;
    hsl: HSL;
    rgb: RGB;
    constructor(color: string | HSL | RGB | RGBArray, options?: Options);
    /**
     * Get css string
     */
    get css(): string;
    /**
     * Get the red value
     */
    get red(): number;
    /**
     * Get the green value
     */
    get green(): number;
    /**
     * Get the blue value
     */
    get blue(): number;
    /**
     * Get the hue value
     */
    get hue(): number;
    /**
     * Get the saturation value
     */
    get saturation(): number;
    /**
     * Get the lightness value
     */
    get lightness(): number;
    /**
     * Get the luminance value
     */
    get luminance(): number;
    /**
     * Get the chroma value
     */
    get chroma(): number;
    /**
     * Get the contrasted color
     */
    get textColor(): string;
    /**
     * Test 2 colors for compliance
     */
    compare(input: string): Analysis;
    /**
     * Increase lightness
     */
    lighten(percentage?: number): string;
    /**
     * Decrease lightness
     */
    darken(percentage?: number): string;
    /**
     * Increase saturation
     */
    saturate(percentage?: number): string;
    /**
     * Decrease saturation
     */
    desaturate(percentage?: number): string;
    /**
     * Invert color
     */
    invert(): string;
    /**
     * Rotate color
     */
    rotate(degrees?: number): string;
    /**
     * Fade color
     */
    fade(percentage?: number): string;
}
export { default as brightnessDifference } from './brightness-difference';
export { default as chroma } from './chroma';
export { default as colorDifference } from './color-difference';
export { default as compare } from './compare';
export { default as contrast } from './contrast';
export { default as darken } from './darken';
export { default as desaturate } from './desaturate';
export { default as fade } from './fade';
export { default as formatCSS } from './format-css';
export { default as formatHex } from './format-hex';
export { default as hex2hsl } from './hex2hsl';
export { default as hex2rgb } from './hex2rgb';
export { default as hsl2hex } from './hsl2hex';
export { default as hsl2rgb } from './hsl2rgb';
export { default as isValidColor } from './is-valid-color';
export { default as isValidHex } from './is-valid-hex';
export { default as lighten } from './lighten';
export { default as luminance } from './luminance';
export { default as name } from './name';
export { default as palette } from './palette';
export { default as parseCSS } from './parse-css';
export { default as random } from './random';
export { default as rgb2hex } from './rgb2hex';
export { default as rgb2hsl } from './rgb2hsl';
export { default as rotate } from './rotate';
export { default as saturate } from './saturate';
export { default as scheme } from './scheme';
export { default as textColor } from './text-color';
export * from './types';
export default Colorizr;
