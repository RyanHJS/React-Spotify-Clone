{"ast":null,"code":"'use strict';\n\nvar superagent = require('superagent'),\n  {\n    TimeoutError,\n    WebapiError,\n    WebapiRegularError,\n    WebapiAuthenticationError,\n    WebapiPlayerError\n  } = require('./response-error');\nvar HttpManager = {};\n\n/* Create superagent options from the base request */\nvar _getParametersFromRequest = function (request) {\n  var options = {};\n  if (request.getQueryParameters()) {\n    options.query = request.getQueryParameters();\n  }\n  if (request.getHeaders() && request.getHeaders()['Content-Type'] === 'application/json') {\n    options.data = JSON.stringify(request.getBodyParameters());\n  } else if (request.getBodyParameters()) {\n    options.data = request.getBodyParameters();\n  }\n  if (request.getHeaders()) {\n    options.headers = request.getHeaders();\n  }\n  return options;\n};\nvar _toError = function (response) {\n  if (typeof response.body === 'object' && response.body.error && typeof response.body.error === 'object' && response.body.error.reason) {\n    return new WebapiPlayerError(response.body, response.headers, response.statusCode);\n  }\n  if (typeof response.body === 'object' && response.body.error && typeof response.body.error === 'object') {\n    return new WebapiRegularError(response.body, response.headers, response.statusCode);\n  }\n  if (typeof response.body === 'object' && response.body.error && typeof response.body.error === 'string') {\n    return new WebapiAuthenticationError(response.body, response.headers, response.statusCode);\n  }\n\n  /* Other type of error, or unhandled Web API error format */\n  return new WebapiError(response.body, response.headers, response.statusCode, response.body);\n};\n\n/* Make the request to the Web API */\nHttpManager._makeRequest = function (method, options, uri, callback) {\n  var req = method.bind(superagent)(uri);\n  if (options.query) {\n    req.query(options.query);\n  }\n  if (options.headers) {\n    req.set(options.headers);\n  }\n  if (options.data) {\n    req.send(options.data);\n  }\n  req.end(function (err, response) {\n    if (err) {\n      if (err.timeout) {\n        return callback(new TimeoutError());\n      } else if (err.response) {\n        return callback(_toError(err.response));\n      } else {\n        return callback(err);\n      }\n    }\n    return callback(null, {\n      body: response.body,\n      headers: response.headers,\n      statusCode: response.statusCode\n    });\n  });\n};\n\n/**\n * Make a HTTP GET request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.get = function (request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.get;\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\n/**\n * Make a HTTP POST request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.post = function (request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.post;\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\n/**\n * Make a HTTP DELETE request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.del = function (request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.del;\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\n/**\n * Make a HTTP PUT request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.put = function (request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.put;\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\nmodule.exports = HttpManager;","map":{"version":3,"names":["superagent","require","TimeoutError","WebapiError","WebapiRegularError","WebapiAuthenticationError","WebapiPlayerError","HttpManager","_getParametersFromRequest","request","options","getQueryParameters","query","getHeaders","data","JSON","stringify","getBodyParameters","headers","_toError","response","body","error","reason","statusCode","_makeRequest","method","uri","callback","req","bind","set","send","end","err","timeout","get","getURI","post","del","put","module","exports"],"sources":["/Users/ryanhe/Desktop/Javascript/React-Spotify-Clone/spotify-clone/node_modules/spotify-web-api-node/src/http-manager.js"],"sourcesContent":["'use strict';\n\nvar superagent = require('superagent'),\n  { TimeoutError, \n    WebapiError, \n    WebapiRegularError, \n    WebapiAuthenticationError,\n    WebapiPlayerError \n  } =  require('./response-error');\n\nvar HttpManager = {};\n\n/* Create superagent options from the base request */\nvar _getParametersFromRequest = function(request) {\n  var options = {};\n\n  if (request.getQueryParameters()) {\n    options.query = request.getQueryParameters();\n  }\n\n  if (request.getHeaders() && request.getHeaders()['Content-Type'] === 'application/json') {\n    options.data = JSON.stringify(request.getBodyParameters());\n  } else if (request.getBodyParameters()) {\n    options.data = request.getBodyParameters();\n  }\n\n  if (request.getHeaders()) {\n    options.headers = request.getHeaders();\n  }\n  return options;\n};\n\nvar _toError = function(response) {\n  if (typeof response.body === 'object' && response.body.error && typeof response.body.error === 'object' && response.body.error.reason) {\n    return new WebapiPlayerError(response.body, response.headers, response.statusCode);\n  }\n\n  if (typeof response.body === 'object' && response.body.error && typeof response.body.error === 'object') {\n    return new WebapiRegularError(response.body, response.headers, response.statusCode);\n  }\n\n  if (typeof response.body === 'object' && response.body.error && typeof response.body.error === 'string') {\n    return new WebapiAuthenticationError(response.body, response.headers, response.statusCode);\n  }\n  \n  /* Other type of error, or unhandled Web API error format */\n  return new WebapiError(response.body, response.headers, response.statusCode, response.body);\n};\n\n/* Make the request to the Web API */\nHttpManager._makeRequest = function(method, options, uri, callback) {\n  var req = method.bind(superagent)(uri);\n\n  if (options.query) {\n    req.query(options.query);\n  }\n\n  if (options.headers) {\n    req.set(options.headers);\n  }\n\n  if (options.data) {\n    req.send(options.data);\n  }\n\n  req.end(function(err, response) {\n    if (err) {\n      if (err.timeout) {\n        return callback(new TimeoutError());\n      } else if (err.response) {\n        return callback(_toError(err.response));\n      } else {\n        return callback(err);\n      }\n    }\n\n    return callback(null, {\n      body: response.body,\n      headers: response.headers,\n      statusCode: response.statusCode\n    });\n  });\n};\n\n/**\n * Make a HTTP GET request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.get = function(request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.get;\n\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\n/**\n * Make a HTTP POST request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.post = function(request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.post;\n\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\n/**\n * Make a HTTP DELETE request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.del = function(request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.del;\n\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\n/**\n * Make a HTTP PUT request.\n * @param {BaseRequest} The request.\n * @param {Function} The callback function.\n */\nHttpManager.put = function(request, callback) {\n  var options = _getParametersFromRequest(request);\n  var method = superagent.put;\n\n  HttpManager._makeRequest(method, options, request.getURI(), callback);\n};\n\nmodule.exports = HttpManager;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}