{"ast":null,"code":"import getLuminance from './luminance';\nimport { invariant, isString, messages, round } from './modules/utils';\nimport parseCSS from './parse-css';\n/**\n * Get the color contrast between 2 colors.\n */\nexport default function contrast(left, right) {\n  invariant(isString(left), messages.left);\n  invariant(isString(right), messages.right);\n  const LuminanceLeft = getLuminance(parseCSS(left));\n  const LuminanceRight = getLuminance(parseCSS(right));\n  return round(LuminanceLeft >= LuminanceRight ? (LuminanceLeft + 0.05) / (LuminanceRight + 0.05) : (LuminanceRight + 0.05) / (LuminanceLeft + 0.05));\n}","map":{"version":3,"names":["getLuminance","invariant","isString","messages","round","parseCSS","contrast","left","right","LuminanceLeft","LuminanceRight"],"sources":["/Users/ryanhe/Desktop/Javascript/React-Spotify-Clone/spotify-clone/node_modules/colorizr/src/contrast.ts"],"sourcesContent":["import getLuminance from './luminance';\nimport { invariant, isString, messages, round } from './modules/utils';\nimport parseCSS from './parse-css';\n\n/**\n * Get the color contrast between 2 colors.\n */\nexport default function contrast(left: string, right: string): number {\n  invariant(isString(left), messages.left);\n  invariant(isString(right), messages.right);\n\n  const LuminanceLeft = getLuminance(parseCSS(left));\n  const LuminanceRight = getLuminance(parseCSS(right));\n\n  return round(\n    LuminanceLeft >= LuminanceRight\n      ? (LuminanceLeft + 0.05) / (LuminanceRight + 0.05)\n      : (LuminanceRight + 0.05) / (LuminanceLeft + 0.05),\n  );\n}\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,aAAa;AACtC,SAASC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,iBAAiB;AACtE,OAAOC,QAAQ,MAAM,aAAa;AAElC;;;AAGA,eAAc,SAAUC,QAAQA,CAACC,IAAY,EAAEC,KAAa;EAC1DP,SAAS,CAACC,QAAQ,CAACK,IAAI,CAAC,EAAEJ,QAAQ,CAACI,IAAI,CAAC;EACxCN,SAAS,CAACC,QAAQ,CAACM,KAAK,CAAC,EAAEL,QAAQ,CAACK,KAAK,CAAC;EAE1C,MAAMC,aAAa,GAAGT,YAAY,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClD,MAAMG,cAAc,GAAGV,YAAY,CAACK,QAAQ,CAACG,KAAK,CAAC,CAAC;EAEpD,OAAOJ,KAAK,CACVK,aAAa,IAAIC,cAAc,GAC3B,CAACD,aAAa,GAAG,IAAI,KAAKC,cAAc,GAAG,IAAI,CAAC,GAChD,CAACA,cAAc,GAAG,IAAI,KAAKD,aAAa,GAAG,IAAI,CAAC,CACrD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}