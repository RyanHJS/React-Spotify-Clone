{"ast":null,"code":"'use strict';\n\nexports.addon = function (renderer) {\n  if (process.env.NODE_ENV !== 'production') {\n    require('./__dev__/warnOnMissingDependencies')('rule', renderer, ['put']);\n  }\n  var blocks;\n  if (process.env.NODE_ENV !== 'production') {\n    blocks = {};\n  }\n  renderer.rule = function (css, block) {\n    // Warn user if CSS selectors clash.\n    if (process.env.NODE_ENV !== 'production') {\n      if (block) {\n        if (typeof block !== 'string') {\n          throw new TypeError('nano-css block name must be a string. ' + 'For example, use nano.rule({color: \"red\", \"RedText\").');\n        }\n        if (blocks[block]) {\n          console.error('Block name \"' + block + '\" used more than once.');\n        }\n        blocks[block] = 1;\n      }\n    }\n    block = block || renderer.hash(css);\n    block = renderer.pfx + block;\n    renderer.put('.' + block, css);\n    return ' ' + block;\n  };\n};","map":{"version":3,"names":["exports","addon","renderer","process","env","NODE_ENV","require","blocks","rule","css","block","TypeError","console","error","hash","pfx","put"],"sources":["/Users/ryanhe/Desktop/Javascript/React-Spotify-Clone/spotify-clone/node_modules/nano-css/addon/rule.js"],"sourcesContent":["'use strict';\n\nexports.addon = function (renderer) {\n    if (process.env.NODE_ENV !== 'production') {\n        require('./__dev__/warnOnMissingDependencies')('rule', renderer, ['put']);\n    }\n\n    var blocks;\n\n    if (process.env.NODE_ENV !== 'production') {\n        blocks = {};\n    }\n\n    renderer.rule = function (css, block) {\n        // Warn user if CSS selectors clash.\n        if (process.env.NODE_ENV !== 'production') {\n            if (block) {\n                if (typeof block !== 'string') {\n                    throw new TypeError(\n                        'nano-css block name must be a string. ' +\n                        'For example, use nano.rule({color: \"red\", \"RedText\").'\n                    );\n                }\n\n                if (blocks[block]) {\n                    console.error('Block name \"' + block + '\" used more than once.');\n                }\n\n                blocks[block] = 1;\n            }\n        }\n\n        block = block || renderer.hash(css);\n        block = renderer.pfx + block;\n        renderer.put('.' + block, css);\n\n        return ' ' + block;\n    };\n};\n"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,KAAK,GAAG,UAAUC,QAAQ,EAAE;EAChC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvCC,OAAO,CAAC,qCAAqC,CAAC,CAAC,MAAM,EAAEJ,QAAQ,EAAE,CAAC,KAAK,CAAC,CAAC;EAC7E;EAEA,IAAIK,MAAM;EAEV,IAAIJ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACvCE,MAAM,GAAG,CAAC,CAAC;EACf;EAEAL,QAAQ,CAACM,IAAI,GAAG,UAAUC,GAAG,EAAEC,KAAK,EAAE;IAClC;IACA,IAAIP,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACvC,IAAIK,KAAK,EAAE;QACP,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;UAC3B,MAAM,IAAIC,SAAS,CACf,wCAAwC,GACxC,uDAAuD,CAC1D;QACL;QAEA,IAAIJ,MAAM,CAACG,KAAK,CAAC,EAAE;UACfE,OAAO,CAACC,KAAK,CAAC,cAAc,GAAGH,KAAK,GAAG,wBAAwB,CAAC;QACpE;QAEAH,MAAM,CAACG,KAAK,CAAC,GAAG,CAAC;MACrB;IACJ;IAEAA,KAAK,GAAGA,KAAK,IAAIR,QAAQ,CAACY,IAAI,CAACL,GAAG,CAAC;IACnCC,KAAK,GAAGR,QAAQ,CAACa,GAAG,GAAGL,KAAK;IAC5BR,QAAQ,CAACc,GAAG,CAAC,GAAG,GAAGN,KAAK,EAAED,GAAG,CAAC;IAE9B,OAAO,GAAG,GAAGC,KAAK;EACtB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}