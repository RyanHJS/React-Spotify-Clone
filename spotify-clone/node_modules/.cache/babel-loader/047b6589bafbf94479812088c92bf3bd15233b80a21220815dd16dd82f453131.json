{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/ryanhe/Desktop/Javascript/React-Spotify-Clone/spotify-clone/node_modules/@gilbarbara/react-range-slider/src/types.ts"],"sourcesContent":["import * as React from 'react';\n\nexport type PlainObject = Record<string, any>;\n\nexport interface RangeSliderPosition {\n  x: number;\n  y: number;\n}\n\nexport interface RangeSliderSize {\n  height?: string;\n  width?: string;\n}\n\nexport interface RangeSliderStylesOptions {\n  height: string | number;\n  padding: string | number;\n  rangeColor: string;\n  thumbBorder: string | number;\n  thumbBorderRadius: string | number;\n  thumbBorderRadiusXY: string | number;\n  thumbColor: string;\n  thumbSize: string | number;\n  thumbSizeXY: string | number;\n  thumbSpace: string | number;\n  trackBorderRadius: string | number;\n  trackColor: string;\n  width: string | number;\n}\n\nexport interface RangeSliderStyles {\n  rail: React.CSSProperties;\n  rangeX: React.CSSProperties;\n  rangeXY: React.CSSProperties;\n  rangeY: React.CSSProperties;\n  sliderX: React.CSSProperties;\n  sliderXY: React.CSSProperties;\n  sliderY: React.CSSProperties;\n  thumbX: React.CSSProperties;\n  thumbXY: React.CSSProperties;\n  thumbY: React.CSSProperties;\n  trackX: React.CSSProperties;\n  trackXY: React.CSSProperties;\n  trackY: React.CSSProperties;\n}\n\nexport interface RangeSliderStylesProp extends Partial<RangeSliderStyles> {\n  options?: Partial<RangeSliderStylesOptions>;\n}\n\nexport interface RangeSliderState extends RangeSliderPosition {\n  isDragging: boolean;\n}\n\nexport interface RangeSliderProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'onDragEnd'> {\n  axis?: 'x' | 'y' | 'xy';\n  classNamePrefix?: string;\n  onAfterEnd?: (position: RangeSliderPosition, props: RangeSliderProps) => void;\n  onChange?: (position: RangeSliderPosition, props: RangeSliderProps) => void;\n  onDragEnd?: (position: RangeSliderPosition, props: RangeSliderProps) => void;\n  styles?: RangeSliderStylesProp;\n  x?: number;\n  xMax?: number;\n  xMin?: number;\n  xStep?: number;\n  y?: number;\n  yMax?: number;\n  yMin?: number;\n  yStep?: number;\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}