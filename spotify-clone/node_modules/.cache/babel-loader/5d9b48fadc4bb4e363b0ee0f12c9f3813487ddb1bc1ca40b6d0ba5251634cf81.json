{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/ryanhe/Desktop/Javascript/React-Spotify-Clone/spotify-clone/node_modules/colorizr/src/types/index.ts"],"sourcesContent":["/* eslint-disable typescript-sort-keys/interface */\nexport interface Analysis {\n  brightnessDifference: number;\n  colorDifference: number;\n  compliant: number;\n  contrast: number;\n  largeAA: boolean;\n  largeAAA: boolean;\n  normalAA: boolean;\n  normalAAA: boolean;\n}\n\nexport interface Colors {\n  hex: string;\n  hsl: HSL;\n  rgb: RGB;\n}\n\nexport type ColorTypes = 'hex' | 'hsl' | 'rgb';\nexport type ColorModels = 'hsl' | 'rgb';\n\nexport interface FormatOptions {\n  alpha?: number;\n  model?: ColorModels;\n}\n\nexport interface HSL {\n  h: number;\n  s: number;\n  l: number;\n}\n\nexport interface Options {\n  model?: ColorModels;\n}\n\nexport interface PaletteOptions {\n  lightness?: number;\n  saturation?: number;\n  size?: number;\n  type?: string;\n}\n\nexport type PlainObject = Record<string, any>;\n\ntype ReturnModel<T> = T extends 'rgb' ? RGB : HSL;\n\nexport type Return<T> = T extends 'rgb' | 'hsl' ? ReturnModel<T> : string;\n\nexport interface RGB {\n  r: number;\n  g: number;\n  b: number;\n}\n\nexport type RGBArray = [number, number, number];\n\nexport type Scheme =\n  | 'analogous'\n  | 'complementary'\n  | 'rectangle'\n  | 'split'\n  | 'split-complementary'\n  | 'square'\n  | 'tetradic'\n  | 'triadic';\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}