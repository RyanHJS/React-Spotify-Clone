{"ast":null,"code":"import hex2rgb from './hex2rgb';\nimport { invariant, isString, messages, round } from './modules/utils';\nimport parseCSS from './parse-css';\n/**\n * Get the chroma of a color.\n */\nexport default function chroma(input) {\n  invariant(isString(input), messages.inputString);\n  const {\n    r,\n    g,\n    b\n  } = hex2rgb(parseCSS(input));\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  return round((max - min) / 255, 4);\n}","map":{"version":3,"names":["hex2rgb","invariant","isString","messages","round","parseCSS","chroma","input","inputString","r","g","b","max","Math","min"],"sources":["/Users/ryanhe/Desktop/Javascript/React-Spotify-Clone/spotify-clone/node_modules/colorizr/src/chroma.ts"],"sourcesContent":["import hex2rgb from './hex2rgb';\nimport { invariant, isString, messages, round } from './modules/utils';\nimport parseCSS from './parse-css';\n\n/**\n * Get the chroma of a color.\n */\nexport default function chroma(input: string): number {\n  invariant(isString(input), messages.inputString);\n\n  const { r, g, b } = hex2rgb(parseCSS(input));\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n\n  return round((max - min) / 255, 4);\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,iBAAiB;AACtE,OAAOC,QAAQ,MAAM,aAAa;AAElC;;;AAGA,eAAc,SAAUC,MAAMA,CAACC,KAAa;EAC1CN,SAAS,CAACC,QAAQ,CAACK,KAAK,CAAC,EAAEJ,QAAQ,CAACK,WAAW,CAAC;EAEhD,MAAM;IAAEC,CAAC;IAAEC,CAAC;IAAEC;EAAC,CAAE,GAAGX,OAAO,CAACK,QAAQ,CAACE,KAAK,CAAC,CAAC;EAE5C,MAAMK,GAAG,GAAGC,IAAI,CAACD,GAAG,CAACH,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;EAC7B,MAAMG,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACL,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;EAE7B,OAAOP,KAAK,CAAC,CAACQ,GAAG,GAAGE,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}