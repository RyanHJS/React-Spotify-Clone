// Generated by CoffeeScript 1.8.0
(function() {
  var Ax, sprintf, w,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  sprintf = require("sprintf").sprintf;

  w = function(string) {
    return string.split(" ");
  };

  module.exports = Ax = (function() {
    Ax.prototype._suppress = {
      "error": w("warn info debug verbose"),
      "warn": w("info debug verbose"),
      "info": w("debug verbose"),
      "debug": w("verbose"),
      "verbose": w("")
    };

    function Ax(configuration) {
      this.level = configuration.level, this.stream = configuration.stream, this.name = configuration.name;
      if (this.name == null) {
        this.name = "-";
      }
      if (this.stream == null) {
        this.stream = process.stdout;
      }
    }

    Ax.prototype.log = function(level, message) {
      if (__indexOf.call(this._suppress[this.level], level) < 0) {
        return this.print(sprintf("%7s [%s] %s '%s'", level.toUpperCase(), new Date().toISOString(), this.name, message));
      }
    };

    Ax.prototype.print = function(string) {
      return this.stream.write(string + "\n");
    };

    Ax.prototype.error = function(message) {
      return this.log("error", message);
    };

    Ax.prototype.warn = function(message) {
      return this.log("warn", message);
    };

    Ax.prototype.info = function(message) {
      return this.log("info", message);
    };

    Ax.prototype.debug = function(message) {
      return this.log("debug", message);
    };

    Ax.prototype.verbose = function(message) {
      return this.log("verbose", message);
    };

    return Ax;

  })();

}).call(this);
